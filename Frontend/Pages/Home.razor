@page "/"
@inject IPostInterface _postInterface
@inject IAuthInterface _authInterface
@* @inject IUserInterface _userInterface *@
@inject NavigationManager NavigationManager
@using Frontend.Models.Posts
@* @using Frontend.Services.Users *@

<div class="container py-5">
    <button @onclick="addPost" class="btn btn-dark">Add Post</button>
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var post in posts)
        {
            <div class="col">
                <div class="card">
                    <img src="@post.ImageUrl" alt="Post Image" class="card-img-top" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h2 class="card-title">@post.Title</h2>
                        <p class="card-text">@post.Content</p>
                        @* <p class="card-text">@post.ImageUrl</p> *@
                       <button @onclick ="@(() => viewpost(post.Id))">View Post</button>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex align-items-center">
                            @* <img src="https://cdn.pixabay.com/photo/2013/07/13/10/44/man-157699_640.png" alt="User Avatar" class="w-12 h-12 rounded-full mr-2"> *@
                            <div>
                                @* @foreach (var user in users)
                                {
                                    if (user.Id == Guid.Parse(post.UserId))
                                    {
                                        <p class="text-gray-700 font-semibold">@user.UserName</p>
                                    }
                                } *@
                                <p class="text-gray-500 text-sm">@post.CreatedAt.ToString("MMMM dd, yyyy")</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<PostDto> posts = new List<PostDto>();
    @* private List<UserDto> users = new List<UserDto>(); *@

    protected override async Task OnInitializedAsync()
    {
        posts = await _postInterface.GetAllPostsAsync();
        @* users = await _userInterface.GetAllUsersAsync(); *@
    }

    private void addPost()
    {
        NavigationManager.NavigateTo("/createpost");
    }

    public void viewpost(Guid id )
    {
        NavigationManager.NavigateTo($"/post/{id}");
    }
}
