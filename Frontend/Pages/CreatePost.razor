@page "/create-post"
@using Frontend.Models.Posts
@using Microsoft.AspNetCore.Components.Forms
@inject IPostInterface _postInterface
@inject NavigationManager NavigationManager

<div class="container mx-auto py-8">
    <div class="max-w-md mx-auto bg-white rounded-lg shadow-lg">
        <div class="p-6">
            <h2 class="text-2xl font-semibold text-gray-800 mb-4">Create a Post</h2>
            <EditForm Model="postModel" OnValidSubmit="HandlePostCreation">
                <DataAnnotationsValidator />

                <div class="mb-4">
                    <label for="title" class="text-gray-600">Title</label>
                    <InputText type="text" id="title" class="form-input mt-1 w-full" @bind="postModel.Title" required />
                    <ValidationMessage For="@(() => postModel.Title)" />
                </div>

                <div class="mb-4">
                    <label for="body" class="text-gray-600">Description</label>
                    <textarea id="body" class="form-textarea mt-1 w-full" rows="4" @bind="postModel.Body" required></textarea>
                    <ValidationMessage For="@(() => postModel.Body)" />
                </div>

                <div class="mb-6">
                    <label for="image" class="text-gray-600">Image URL</label>
                    <InputText type="url" id="image" class="form-input mt-1 w-full" @bind="postModel.ImageUrl" required />
                    <ValidationMessage For="@(() => postModel.ImageUrl)" />
                </div>

                <div class="flex justify-end">
                    <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-full">Create Post</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private PostRequestDto postModel = new PostRequestDto();

  public async Task HandlePostCreation()
{
    // Call the service method to create the post
    var result = await _postInterface.AddPostAsync(postModel);

    if (result != null)
    {
        // Post creation successful, navigate to the home page or another page as needed
        NavigationManager.NavigateTo("/");
    }
    else
    {
        // Handle error if post creation fails
        // You can display an error message to the user

        // For example, you can set an error message to display in the UI
        errorMessage = "Failed to create the post. Please try again.";

        // Optionally, you can log the error or perform other error handling tasks

        // You can also clear the error message after a certain time or when the user dismisses it
    }
}

    }

